@prefix : <http://shapes.top-levelPatterns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix smp: <http://btl2-patternsExtension#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix btl2: <http://purl.org/biotop/btl2.owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


<http://shapes.top-levelPatterns> rdf:type owl:Ontology ;
  rdfs:label "Top-level semantic patterns shapes" ;
  owl:imports  <file:///semantic/shacl/SMP.ttl> .

:ObservationResultShape rdf:type sh:Shape ;
	sh:scopeClass smp:ObservationResult ;
	sh:property[
		sh:predicate smp:IsResultOfProcess ;
		sh:minCount 1 ;
		sh:shape :ProcessShape ; 
	];
	sh:property[
		sh:predicate smp:isAbout ;
		sh:minCount 1 ;
		sh:classIn (btl2:Quality btl2:Situation) ;
	];
	sh:property[
		sh:predicate smp:hasObservedValue ;
		sh:minCount 1 ;
		sh:class btl2:ValueRegion ;
	];
	sh:property[
		sh:predicate smp:hasInformationPart ;
		sh:class btl2:InformationObject ;
	].
			
:ValueRegionShape rdf:type sh:Shape ;
	sh:scopeClass smp:ValueRegion ;
	sh:property[
		sh:predicate smp:isDenotedBy ;
		sh:maxCount 1;
		sh:shape :DatatypeShape ;
	].

:DatatypeShape rdf:type sh:Shape ;
	sh:scopeClass smp:Datatype ;
	sh:property[
		sh:predicate smp:hasValue;
		sh:minCount 1;
		sh:maxCount 1;
		sh:datatype xsd:anyType;
		
	];
	sh:property[
		sh:predicate smp:hasInformationPart ;
		sh:class btl2:InformationObject ;
	].
	

:ProcessShape rdf:type sh:Shape ;
	sh:scopeClass smp:Process;
	sh:property[
		sh:predicate smp:hasTemporalValue;
		sh:class btl2:TemporalRegion;
	];
	sh:property[
		sh:predicate smp:hasResult;
		sh:class btl2:InformationObject;
	];
	sh:property[
		sh:predicate smp:hasParticipant;
		sh:classIn (btl2:MaterialObject btl2:InformationObject) ;
	];
	sh:property[
		sh:predicate smp:hasQuality ;
		sh:class btl2:ValueRegion ;
	];
	sh:property[
		sh:predicate smp:isDueTo;
		sh:classIn (btl2:MaterialObject btl2:InformationObject btl2:Process btl2:ImmaterialObject btl2:Disposition btl2:Situation);
	];
	sh:property[
		sh:predicate smp:happensBefore;
		sh:shape :ProcessShape;
	];
	sh:inverseProperty[
		sh:predicate smp:happensBefore;
		sh:shape :ProcessShape;
	];
	sh:property[
		sh:predicate smp:isIncludedIn;
		sh:classIn (btl2:MaterialObject btl2:ImmaterialObject) ;
			
	].


:PlanProcessShape rdf:type sh:Shape ;
		sh:scopeClass smp:Plan;
		sh:property[
			sh:predicate smp:IsResultOfProcess ;
			sh:minCount 1 ;
			sh:shape :ProcessShape ;
		];
		sh:property[
			sh:predicate smp:hasInformationPart ;
			sh:classIn (btl2:InformationObject)
		];
		sh:property[
			sh:predicate smp:performsProcess;
			sh:minCount 1;
			sh:shape :ProcessShape;
		].

	

